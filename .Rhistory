),
hr(),
h4('Elija un año'),
sliderInput(
inputId = "usuario_año",
label = "Año",
value = 2019,
min = 2000,
max = 2019),
# agregamos el botón de consulta
actionButton(inputId = 'click', label = 'Consulta')
),
hr(),
hr(),
hr(),
hr(),
h4('Desarrollado por Martínez, Pérez Ibáñez y Arguto'),
),
# Y acá la columna donde van a estar todas las pestañas con las visualizaciones
column(
width = 9,
div(
class = 'panel',
tabsetPanel(
# Primera pestaña: exportaciones
tabPanel(
'Exportaciones',
div(
class = 'panel_header',
style = 'padding-left:10px; padding-top: 10px;',
h4('Principales exportaciones')
),
hr(),
div(
class = 'panel_body',
highchartOutput('productos_exportacion')
),
hr(),
h4 ('Top ten exportaciones'),
div(
class = 'panel_body2',
dataTableOutput ('top_ten_exportaciones')
),
hr(),
h4 ('Total exportaciones'),
div(
class = 'result',
textOutput ('total_exportaciones'))
),
#Segunda pestaña: importaciones
tabPanel(
'Importaciones',
div (
class = 'panel_header2',
style = 'padding-left:10px; padding-top: 10px;',
h4 ('Principales importaciones')
),
div(
class = 'panel_body2',
highchartOutput('productos_importacion')),
hr(),
h4 ('Top ten importaciones'),
div(
class = 'panel_body2',
dataTableOutput ('top_ten_importaciones')
),
hr(),
h4 ('Total importaciones'),
div(
class = 'result',
textOutput ('total_importaciones'))
)
)
)
)
)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
stopApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
stopApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
stopApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
ui <- fluidPage(theme = shinytheme("spacelab"),
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "styles.css")
),
# Jumbotron como header -----
title = "ComExArg",
div( id = 'encabezado',
class = 'jumbotron',
style = "background-image:url(banner.jpg);background-repeat:no-repeat; background-size: 100% 100%;",
div(
class = 'container',
style = 'background-color:#FFFFFF9c;',
h1('ComExArg', style = 'color:#000000;'),
p('Sistema de consulta del Comercio Exterior Argentino')
)
),
hr (),
div(
class = 'container',
id = 'aplicacion',
fluidRow(
# Vamos a hacer primero la columna donde va a estar la selecciÃ³n de los usuarios.
column(
width = 3,
wellPanel(
div(
id = 'input_titulo',
strong(h3('Filtros'))
),
hr(),
h4('Seleccione el país'),
pickerInput(
inputId = "usuario_pais",
label = 'País',
choices = unique (pais$nombre) %>% as.character (),
options= list(`actions-box`=TRUE,
`none-selected-text` = "Elija un país"),
),
hr(),
h4('Elija un año'),
sliderInput(
inputId = "usuario_año",
label = "Año",
value = 2019,
min = 2000,
max = 2019),
# agregamos el botón de consulta
actionButton(inputId = 'click', label = 'Consulta'),
br(),
br(),
),
),
# Y acá la columna donde van a estar todas las pestañas con las visualizaciones
column(
width = 9,
div(
class = 'panel',
tabsetPanel(
# Primera pestaña: exportaciones
tabPanel(
'Exportaciones',
div(
class = 'panel_header',
style = 'padding-left:10px; padding-top: 10px;',
h4('Principales exportaciones')
),
hr(),
div(
class = 'panel_body',
highchartOutput('productos_exportacion')
),
hr(),
h4 ('Top ten exportaciones'),
div(
class = 'panel_body2',
dataTableOutput ('top_ten_exportaciones')
),
hr(),
h4 ('Total exportaciones'),
div(
class = 'result',
textOutput ('total_exportaciones'))
),
#Segunda pestaña: importaciones
tabPanel(
'Importaciones',
div (
class = 'panel_header2',
style = 'padding-left:10px; padding-top: 10px;',
h4 ('Principales importaciones')
),
div(
class = 'panel_body2',
highchartOutput('productos_importacion')),
hr(),
h4 ('Top ten importaciones'),
div(
class = 'panel_body2',
dataTableOutput ('top_ten_importaciones')
),
hr(),
h4 ('Total importaciones'),
div(
class = 'result',
textOutput ('total_importaciones')),
)
)
)
)
)))
ui <- fluidPage(theme = shinytheme("spacelab"),
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "styles.css")
),
# Jumbotron como header -----
title = "ComExArg",
div( id = 'encabezado',
class = 'jumbotron',
style = "background-image:url(banner.jpg);background-repeat:no-repeat; background-size: 100% 100%;",
div(
class = 'container',
style = 'background-color:#FFFFFF9c;',
h1('ComExArg', style = 'color:#000000;'),
p('Sistema de consulta del Comercio Exterior Argentino')
)
),
hr (),
div(
class = 'container',
id = 'aplicacion',
fluidRow(
# Vamos a hacer primero la columna donde va a estar la selecciÃ³n de los usuarios.
column(
width = 3,
wellPanel(
div(
id = 'input_titulo',
strong(h3('Filtros'))
),
hr(),
h4('Seleccione el país'),
pickerInput(
inputId = "usuario_pais",
label = 'País',
choices = unique (pais$nombre) %>% as.character (),
options= list(`actions-box`=TRUE,
`none-selected-text` = "Elija un país"),
),
hr(),
h4('Elija un año'),
sliderInput(
inputId = "usuario_año",
label = "Año",
value = 2019,
min = 2000,
max = 2019),
# agregamos el botón de consulta
actionButton(inputId = 'click', label = 'Consulta'),
br(),
br(),
br(),
br(),
),
),
# Y acá la columna donde van a estar todas las pestañas con las visualizaciones
column(
width = 9,
div(
class = 'panel',
tabsetPanel(
# Primera pestaña: exportaciones
tabPanel(
'Exportaciones',
div(
class = 'panel_header',
style = 'padding-left:10px; padding-top: 10px;',
h4('Principales exportaciones')
),
hr(),
div(
class = 'panel_body',
highchartOutput('productos_exportacion')
),
hr(),
h4 ('Top ten exportaciones'),
div(
class = 'panel_body2',
dataTableOutput ('top_ten_exportaciones')
),
hr(),
h4 ('Total exportaciones'),
div(
class = 'result',
textOutput ('total_exportaciones'))
),
#Segunda pestaña: importaciones
tabPanel(
'Importaciones',
div (
class = 'panel_header2',
style = 'padding-left:10px; padding-top: 10px;',
h4 ('Principales importaciones')
),
div(
class = 'panel_body2',
highchartOutput('productos_importacion')),
hr(),
h4 ('Top ten importaciones'),
div(
class = 'panel_body2',
dataTableOutput ('top_ten_importaciones')
),
hr(),
h4 ('Total importaciones'),
div(
class = 'result',
textOutput ('total_importaciones')),
)
)
)
)
)))
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
# INSTALAMOS LAS LIBRERIAS
#
# install.packages("shinyWidgets")
# install.packages ("shinythemes")
#install.packages("ggraph")
#install.packages("circlize")
#install.packages("reshape2")
#devtools::install_github("mattflor/chorddiag")
#install.packages("treemap")
install.packages("attempt")
install.packages("attempt")
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
getwd()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
getwd()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
